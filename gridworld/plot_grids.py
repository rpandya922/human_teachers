from __future__ import division
import numpy as np
import matplotlib.pyplot as plt
from random import shuffle
import pickle
# my files
from environment import Environment
# created with create_grid.py
colors1 = [[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
           [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
           [ 0.,  0.,  0., -1., -1., -1.,  0.,  0.,  0.,  0.],
           [ 0.,  0.,  0., -1., -1., -1.,  0.,  0.,  0.,  0.],
           [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
           [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
           [ 0.,  0.,  0.,  1.,  1.,  1.,  0.,  0.,  0.,  0.],
           [ 0.,  0.,  0.,  1.,  1.,  1.,  0.,  0.,  0.,  0.],
           [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
           [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]

colors2 = [[ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0.5,  0.5,  0.5,  0. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0.5,  0.5,  0.5,  0. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  1. ,  1. ,  1. ,  0. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  1. ,  1. ,  1. ,  0. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ]]

colors3 = [[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
           [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
           [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
           [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
           [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
           [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
           [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
           [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
           [ 0.,  0.,  0., -1., -1., -1.,  0.,  0.,  0.,  0.],
           [ 0.,  0.,  0., -1., -1., -1.,  0.,  0.,  0.,  0.]]

colors4 = [[ 0. ,  0. ,  0. , -1. , -1. , -1. ,  0. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. , -1. , -1. , -1. ,  0. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. , -0.5, -0.5, -0.5,  0. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. , -0.5, -0.5, -0.5,  0. ,  0. ,  0. ,  0. ]]

colors5 = [[ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0.5,  0.5,  0. ,  1. ,  1. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0.5,  0.5,  0. ,  1. ,  1. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0.5,  0.5,  0. ,  1. ,  1. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ]]

colors6 = [[ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. , -1. , -1. ,  0. , -0.5, -0.5,  0. ,  0. ],
           [ 0. ,  0. ,  0. , -1. , -1. ,  0. , -0.5, -0.5,  0. ,  0. ],
           [ 0. ,  0. ,  0. , -1. , -1. ,  0. , -0.5, -0.5,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ]]

colors7 = [[ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. , -1. , -1. , -1. ,  1. ,  1. ,  1. ,  0. ,  0. ],
           [ 0. ,  0. , -1. , -1. , -1. ,  1. ,  1. ,  1. ,  0. ,  0. ],
           [ 0. ,  0. ,  0.5,  0.5,  0.5, -0.5, -0.5, -0.5,  0. ,  0. ],
           [ 0. ,  0. ,  0.5,  0.5,  0.5, -0.5, -0.5, -0.5,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ]]

colors8 = [[ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0. , -1. , -1. , -1. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0. , -1. , -1. , -1. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0. , -0.5, -0.5, -0.5,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0. , -0.5, -0.5, -0.5,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ]]

colors9 = [[ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0.5,  0.5,  0.5,  0. ,  1. ,  1. ,  1. ,  0. ],
           [ 0. ,  0. ,  0.5,  0.5,  0.5,  0. ,  1. ,  1. ,  1. ,  0. ],
           [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0. , -1. , -1. , -1. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0. , -1. , -1. , -1. ,  0. ,  0. ,  0. ],
           [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ]]

 # newer, "more interesting" grids from create_grid.py
maze = [[-1. , -1. , -1. ,  1. ,  1. ,  1. ,  1. ,  1. ,  1. ,  1. ],
        [ 1. ,  1. ,  1. ,  1. , -1. ,  1. , -1. , -1. ,  1. ,  1. ],
        [ 1. , -1. , -1. , -1. , -1. ,  1. , -1. , -1. ,  1. ,  1. ],
        [ 1. , -1. , -1. ,  1. ,  1. ,  1. , -1. , -1. ,  1. ,  1. ],
        [ 1. , -1. , -1. ,  1. , -1. , -1. , -1. , -1. , -1. , -0.5],
        [ 1. ,  1. , -1. ,  1. , -1. , -1. , -1. , -1. , -1. ,  1. ],
        [-1. , -1. , -1. ,  1. , -1. , -1. , -1. , -1. , -1. ,  1. ],
        [ 1. ,  1. ,  1. ,  1. , -1. , -1. , -1. , -1. , -1. ,  1. ],
        [ 1. , -1. , -1. , -1. , -1. , -1. , -1. , -1. , -1. ,  1. ],
        [ 1. ,  1. ,  1. ,  1. ,  1. ,  1. ,  1. ,  1. ,  1. ,  1. ]];
encircle1 = [[ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
             [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
             [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
             [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
             [ 0. ,  0. ,  0. ,  0. , -1. , -1. , -1. ,  0. ,  0. ,  0. ],
             [ 0. ,  0. ,  0. ,  0. , -1. ,  1. , -0.5,  0. ,  0. ,  0. ],
             [ 0. ,  0. ,  0. ,  0. , -1. , -1. , -1. ,  0. ,  0. ,  0. ],
             [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
             [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
             [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ]];
encircle2 = [[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
             [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
             [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
             [ 0.,  0., -1., -1., -1., -1., -1.,  0.,  0.,  0.],
             [ 0.,  0., -1., -1., -1., -1., -1.,  0.,  0.,  0.],
             [ 0.,  0., -1., -1.,  1., -1., -1.,  0.,  0.,  0.],
             [ 0.,  0., -1., -1., -1., -1., -1.,  0.,  0.,  0.],
             [ 0.,  0., -1., -1., -1., -1., -1.,  0.,  0.,  0.],
             [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
             [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]];
backtrack = [[ 0.,  0.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],
             [ 0.,  0.,  1.,  1.,  1.,  1.,  1., -1., -1., -1.],
             [ 0.,  0.,  1.,  1.,  1.,  1.,  1., -1., -1., -1.],
             [ 0.,  0.,  1.,  1.,  1.,  1.,  1., -1., -1., -1.],
             [ 0.,  0.,  1.,  1.,  1.,  1.,  1., -1., -1., -1.],
             [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
             [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
             [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
             [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
             [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]];
stand_still = [[ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
               [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
               [ 0. ,  0. ,  0. ,  0. ,  1. ,  0. ,  0. ,  0. ,  0. ,  0. ],
               [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
               [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
               [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
               [ 0. ,  0. ,  0. ,  0. ,  0.5,  0. ,  0. ,  0. ,  0. ,  0. ],
               [ 0. ,  0. ,  0. ,  0. ,  0.5,  0. ,  0. ,  0. ,  0. ,  0. ],
               [ 0. ,  0. ,  0. ,  0. ,  0.5,  0. ,  0. ,  0. ,  0. ,  0. ],
               [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ]];
new1 = [[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
       [ 0., -1., -1., -1.,  0.,  0.,  0.,  0.,  0.,  0.],
       [ 0., -1., -1., -1.,  0.,  0.,  0.,  0.,  0.,  0.],
       [ 0., -1., -1., -1.,  0.,  0.,  0.,  0.,  0.,  0.],
       [ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  1.,  0.,  0.],
       [ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  1.,  0.,  0.],
       [ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  1.,  0.,  0.],
       [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
       [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
       [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]] # living reward -0.5, start (4, 0), goal (0, 3)
new2 = [[ 0. , -1. , -1. , -1. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
       [ 0. , -1. , -1. , -1. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
       [ 0. , -1. , -1. , -1. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
       [ 0. , -1. , -1. , -1. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
       [ 0. , -1. , -1. , -1. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
       [ 0. , -1. , -1. , -1. ,  0. ,  0.5,  0.5,  0. ,  0. ,  0. ],
       [-1. , -1. , -1. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
       [ 0. , -1. ,  0. ,  0. ,  0. ,  1. ,  1. ,  0. ,  0. ,  0. ],
       [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
       [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ]] # living reward 0, start (5, 0), goal (7, 0)
new3 = [[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
       [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
       [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
       [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
       [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
       [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
       [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
       [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
       [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
       [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]] # living reward -0.1 (arbitrary), start (0, 0) goal (9, 9)
new4 = [[ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
       [ 0. ,  0.5,  0.5,  0.5,  0. ,  1. ,  1. ,  1. ,  0. ,  0. ],
       [ 0. ,  0.5,  0.5,  0.5,  0. ,  1. ,  1. ,  1. ,  0. ,  0. ],
       [ 0. ,  0.5,  0.5,  0.5,  0. ,  1. ,  1. ,  1. ,  0. ,  0. ],
       [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
       [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ],
       [ 0. ,  0. ,  0. , -1. , -1. , -1. ,  0. ,  0. ,  0. ,  0. ],
       [ 0. ,  0. ,  0. , -1. , -1. , -1. ,  0. ,  0. ,  0. ,  0. ],
       [ 0. ,  0. ,  0. , -1. , -1. , -1. ,  0. ,  0. ,  0. ,  0. ],
       [ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ]] # living reward -0.5, start (5, 4) goal (5, 9)

starts = [None, None, None, None, None, None, None, None, None, None, None, None, None, None, (4, 0), (5, 0), (0, 0), (5, 4)]
goals = [None, None, None, None, None, None, None, None, None, None, None, None, None, None, (0, 3), (7, 0), (9, 9), (5, 9)]
living_rewards = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.5, 0, -0.1, -0.5]
all_grids = [colors1, colors2, colors3, colors4, colors5, colors6, colors7, colors8, colors9, 
             maze, encircle1, encircle2, backtrack, stand_still, new1, new2, new3, new4]
def save_raw_grids():
    for i in range(len(starts)):
        if starts[i] is None:
            starts[i] = (5, 0)
        if goals[i] is None:
            goals[i] = (5, 9)
    f = open("./data/raw_grids.pkl","wb")
    pickle.dump({'grids': all_grids, 'starts': starts, 'goals': goals, 'living_rewards': living_rewards}, f)
    f.close()
def save_environments():
    to_save = {'num_envs': 0}
    for i, grid in enumerate(all_grids):
        start = starts[i] or (5, 0)
        goal = goals[i] or (5, 9)
        env = Environment(grid, start, goal, living_rewards[i])
        env.add_path(0)
        env.add_path(1)
        env.add_path(2)
        to_save['env_' + str(i)] = env
        to_save['num_envs'] += 1
    f = open("./data/environments.pkl", "wb")
    pickle.dump(to_save, f)
    f.close()

f = open("./data/environments.pkl", "rb")
envs = pickle.load(f)
f.close()

# interesting_envs = [2, 3, 9, 10, 14, 15, 16, 17, 18]
fig, axes = plt.subplots(nrows=3, ncols=6)
axes = np.array(axes).flatten()
env_idxs = [2, 3, 10, 14, 15, 16, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]
for i, idx in enumerate(env_idxs):
    ax = axes[i]
    env = envs['env_' + str(idx)]
    env.show_all_paths(ax)
    ax.set_title("Grid " + str(i))# + " " + str(env.living_reward))
    ax.get_yaxis().set_ticklabels([])
    ax.get_xaxis().set_ticklabels([])
plt.show()
1/0
# interesting_envs_idxs = [4,6,9,0,1,3,5,8,12,13]
# fig, axes = plt.subplots(nrows=5, ncols=2)
# axes = np.array(axes).flatten()
# for i, idx in enumerate(interesting_envs_idxs):
#     ax = axes[i]
#     env_idx = envs['interesting_envs'][idx]
#     env = envs['env_' + str(env_idx)]
#     env.show_all_paths(ax)
#     ax.set_title('Grid ' + str(i))
# plt.show()
# 1/0

grids = [colors9, colors1, colors2, colors4, colors6, colors7, colors3, 
         maze, encircle1, encircle2, backtrack, stand_still]
shuffle(grids)
fig, axes = plt.subplots(nrows=4, ncols=3)
axes = np.array(axes).flatten()

for i, ax in enumerate(axes):
    # create colormap and normalize from -1 to 1 (range of rewards)
    # done this way to be able to color start and goal separately
    cmap = plt.cm.gray
    norm = plt.Normalize(-1, 1)
    rgba = cmap(norm(grids[i]))

    # colors start and goal pixels individually
    rgba[5, 0, :3] = 0, 0, 1
    rgba[5, 9, :3] = 1, 0, 0

    ax.imshow(rgba)
    ax.grid(axis='both', linestyle='-', color='k', linewidth=2)
    ax.set_xticks(np.arange(-0.5, 10 + 0.5, 1))
    ax.set_yticks(np.arange(-0.5, 10 + 0.5, 1))

plt.show()